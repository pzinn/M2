# @configure_input@
include include/config.Makefile
VPATH = @srcdir@
.PRECIOUS:@srcdir@/configure config.status
.PHONY:unconfigure-libs reconfigure configure-help report-M2-location help scripts
all install: \
	check-make configured check-for-undefined-configure-variables\
	srcdir protect-configs configfiles check-machine \
	M2 all-in-subdirs report-M2-location
M2: GNUmakefile
	rm -f M2
	( echo 'export LD_LIBRARY_PATH=$(BUILTLIBPATH)/lib:$$LD_LIBRARY_PATH' ; \
	  echo 'exec @pre_bindir@/M2 "$$@"' \
	  ) >M2
	chmod a+x M2
define package
all install-$1: all-$1
install: install-$1
install-$1 all-$1:; $(MAKE) -C Macaulay2/packages $@
endef
$(foreach i, $(PACKAGES), $(eval $(call package,$i)))

configfiles:; $(MAKE) -f Makefile.configfiles
check-make:; @ echo "$(.FEATURES)" | grep order-only >/dev/null || (echo error: version >= 3.81 of GNU make is required >&2; false)
configured:include/configuration
include/configuration: config.status; ./config.status
check:configured check-in-Macaulay2
check:; : +++ all Macaulay2 tests succeeded +++
check-machine:; @[ "@UNAME_INFO@" = "` @UNAME_INFO_COMMAND@ `" ] || (echo "error: reconfiguration required (uname output seems different)" >&2; false)
distclean:clean distclean-in-subdirs distclean-this-dir
distclean-this-dir:
	rm -f @CONFIGURED_FILES@ include/M2/config.h include/config.Makefile config.cache config.log configure.options config.status config.args
	rm -f include/M2/synchronization.h
	find . -type d -empty -delete
$(foreach t,all check clean distclean,					\
	$(foreach d,libraries Macaulay2 distributions check-configure,	\
	   $(eval .PHONY: $t-in-subdirs)				\
	   $(eval .PHONY $t $t-in-subdirs:$t-in-$d)			\
	   $(eval $t-in-$d:; $$(MAKE) -C $d $t)))
clean:
	rm -f M2 srcdir .link-test srcdir confdefs.h configure.lineno conftest.* include/config.h
	rm -rf StagingArea conf_*
	rm -f pre-install.sh post-install.sh normal-install.sh
install: configured normal; $(MAKE) -C distributions $@
normal:; $(NORMAL_INSTALL) 
scripts: pre-install.sh post-install.sh
MI = $(MAKE) -s --no-print-directory -n install -o all PRE_INSTALL=turn-off POST_INSTALL=turn-off NORMAL_INSTALL=turn-off
pre-install.sh    : install-scripts.awk ; $(MI) PRE_INSTALL=turn-on |gawk -f $^ >$@
post-install.sh   : install-scripts.awk ; $(MI) POST_INSTALL=turn-on |gawk -f $^ >$@
normal-install.sh : install-scripts.awk ; $(MI) NORMAL_INSTALL=turn-on |gawk -f $^ >$@
GNUmakefile: GNUmakefile.in; ./config.status GNUmakefile
include/config.Makefile: include/config.Makefile.in ; ./config.status include/config.Makefile
include/M2/config.h: include/M2/config.h.in ./config.status ; ./config.status include/M2/config.h
@srcdir@/configure : @srcdir@/configure.ac @srcdir@/config/files; $(MAKE) -C @srcdir@ -f Makefile
recheck config.status: @srcdir@/configure
	./config.status --recheck
	./config.status
status: @srcdir@/configure
	@echo '-----------------------------------------------------------------------------'
	@echo '#  Here is the way you ran $^ before:'
	@echo '#'
	@echo "# `if test -f config.args ; then cat config.args ; else echo arguments not available ; fi`"
	@echo '#'
	@echo '#  Type'
	@echo '        make reconfigure'
	@echo '#  to run it that way again.'
	@echo '#'
	@echo '-----------------------------------------------------------------------------'
srcdir: GNUmakefile
	: creating or removing symbolic link to common staging area, if necessary,
	: based on comparision of these directories:
	:                      pre_prefix : @pre_prefix@
	: abs_builddir/StagingArea/common : @abs_builddir@/StagingArea/common
	@ if [ "@abs_builddir@"/StagingArea/common != "@pre_prefix@" ] ;\
	then (set -x ;\
	     rm -rf StagingArea/common ;\
	     $(MKDIR_P) StagingArea ;\
	     ln -s "@pre_prefix@" StagingArea/common) ;\
	else \
	     if [ -L "@abs_builddir@"/StagingArea/common ] ;\
	     then (set -x ;\
		   rm StagingArea/common ;\
		  ) ;\
	     fi ;\
	fi
	rm -f $@ .link-test
	echo "@srcdir@/" >$@
subst: config.status ; ./config.status
show: config.status
	<$< sed -e 's/\\\n//' |egrep '^[SD]\["' | sed -e 's/^S."\(.*\)"\]="\(.*\)"$$/\1=\2/' -e 's/^D."\(.*\)"\]="\(.*\)"$$/#define \1 \2/' -e 's/\\"/"/g'
CONFIG_FILES = @srcdir@/configure @srcdir@/config/install-sh @srcdir@/config/config.sub @srcdir@/config/config.guess @srcdir@/config/files
reconfigure-top-only: recheck check-for-undefined-configure-variables protect-configs
protect-configs:; chmod a-w $(shell cat @srcdir@/config/files)
check-for-undefined-configure-variables:
	: "checking for strings that look like unsubstituted configure variables in all *.in files..."
	@ egrep -nH '@[A-Za-z_]+@' $(shell cat @srcdir@/config/files) | sed -e 's=^\([^:]*\):=@srcdir@/\1.in:='  | egrep . ; [ "$?" != 0 ]
configure-help: $(CONFIG_FILES) ; @ @srcdir@/configure --help
relink:; rm -f @pre_exec_prefix@/bin/M2@EXE@ && $(MAKE) -C Macaulay2/d @pre_exec_prefix@/bin/M2@EXE@
relink-nostrip:; rm -f @pre_exec_prefix@/bin/M2@EXE@ && $(MAKE) -C Macaulay2/d STRIP=no @pre_exec_prefix@/bin/M2@EXE@
unmark-packages:; $(MAKE) -C Macaulay2/packages $@
reconfigure: reconfigure-top-only unconfigure-libs 
unconfigure-libs:; $(MAKE) -C libraries unconfigure
remove-deps:; find . -name \*.dep -delete
log-archive:; find . -name config.log |xargs tar xzf config-logs.tgz
report-M2-location:
	: : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : :
	: Macaulay2 executable location:
	:    @pre_bindir@/M2@EXE@
	: : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : :
help:
	@ echo "Macaulay2 version @PACKAGE_VERSION@"
	@ echo ""
	@ echo "make files configured with:"
	@ echo "    OS=@OS@ REL=@REL@ ISSUE=@ISSUE@ ARCH=@ARCH@ STATIC=@STATIC@"
	@ echo "    DEBUG=@DEBUG@ OPTIMIZE=@OPTIMIZE@ ENCAP=@ENCAP@"
	@ echo ""
	@ echo "Macaulay2 executable location:"
	@ echo "   @pre_bindir@/M2@EXE@"
	@ echo ""
	@ echo "usage: make ..."
	@ echo ""
	@ echo "targets:"
	@ echo "  all               build/compile all files and distributions [the default target]"
	@ echo "  install -o all    install files (without re-making them)"
	@ echo "  relink            remove M2@EXE@ and rebuild it"
	@ echo "  relink-nostrip    remove M2@EXE@ and rebuild it, unstripped"
	@ echo "  install           make and install files"
	@ echo "  check             run the tests"
	@ echo "  clean             remove all generated files except configured files"
	@ echo "  distclean         remove all generated files"
	@ echo "  help              show this help"
	@ echo ""
	@ echo "configuration display:"
	@ echo "  status                    show options used with 'configure'"
	@ echo "  configure-help            show help for 'configure'"
	@ echo "  reconfigure               re-run configure, set libraries for later reconfiguration"
	@ echo "  reconfigure-top-only      re-run configure"
	@ echo "  unconfigure-libs          set libraries for later reconfiguration"
	@ echo "  subst                     re-run config.status, remaking the makefiles"
	@ echo "  show                      show configuration variable values"
	@ echo ""
	@ echo "package options:"
	@ echo "  PACKAGES='Foo Bar'             the list of packages to process"
	@ echo "  IgnoreExampleErrors=true       continue even after errors in example code"
	@ echo "  RemakePackages=true            remake the packages"
	@ echo "  RemakeAllDocumentation=true    remake all documentation"
	@ echo "  CheckDocumentation=false       don't check documentation for completeness"
	@ echo "  RerunExamples=true             rerun example output files"
	@ echo "  debugLevel=1                   turn on further M2 debugging output"
	@ echo ""
	@ echo "make install options:"
	@ echo "  prefix=...          installation prefix"
	@ echo "                      (currently ${prefix})"
	@ echo "  exec_prefix=...     installation prefix for architecture dependent files"
	@ echo "                      (currently ${exec_prefix})"
	@ echo "  ENCAP=yes           install in ${prefix}/@package@ instead"
	@ echo "  MAPFILE=yes         create a mapfile when linking M2"
	@ echo "  DESTDIR=/Foo/Bar    install in /Foo/Bar${prefix} instead"
# Local Variables:
# compile-command: "make -C $M2BUILDDIR "
# End:
