HOMEPAGE = http://www.hboehm.info/gc/
# URL = http://www.hboehm.info/gc/gc_source/

# license for gc: "Permission is hereby granted to use or copy this program for any purpose ... " 
#  for details, see if file README.QUICK

# warning: we don't use libcord.so, but it gets compiled with an RPATH set like this:
#   $ objdump -x libcord.so | grep RPA
#     RPATH                /home/dan/src/M2/trunk/BUILD/Linux-x86_64/ubuntu/include/.././libraries/final/lib
# That might happen to other sharable libraries we import
# That's why it's better for sharable libraries to be distributed as separate packages.

# We get the sources from the home page above or from
#   https://github.com/ivmai/bdwgc/
#   https://github.com/ivmai/libatomic_ops/
# Run the appropriate autoconf tools and tar them up
# In more detail, run these commands:
#   git clone git://github.com/ivmai/bdwgc.git
#   cd bdwgc
#   git clone git://github.com/ivmai/libatomic_ops.git
#   autoreconf -vif
#   automake --add-missing
#   ./configure
#   make
#   make check

# We cache their code here to ensure that the URL doesn't break:
URL = http://www.math.uiuc.edu/Macaulay2/Extra

# We made gc+libatomic_ops-7.4.0.tar.gz by untarring
#    http://www.hboehm.info/gc/gc_source/libatomic_ops-7.4.0.tar.gz
# and then untarring
#    http://www.hboehm.info/gc/gc_source/gc-7.4.0.tar.gz
# inside it, with the resulting directory libatomic_ops-7.4.0
# renamed to libatomic_ops.

VERSION = 7.4.0
TARFILE = gc+libatomic_ops-$(VERSION).tar.gz
TARDIR = gc-$(VERSION)
#PATCHFILE = @abs_srcdir@/patch-$(VERSION)

# for gc "make check" requires far too much memory
VLIMIT := 2500000
MLIMIT := $(VLIMIT)
# oddly, unless the VLIMIT is bigger than 2GB, the test subthread_create fails with this message
# under Ubuntu 12.10:
# Thread #164 creation failed: Resource temporarily unavailable

CONFIGOPTIONS += --enable-cplusplus

# this tells it that libatomic_ops is included internally as a subdirectory
CONFIGOPTIONS += --with-libatomic-ops=no

#################################

VPATH = @srcdir@

CONFIGOPTIONS += --enable-threads=posix
CONFIGOPTIONS += --enable-parallel-mark

ifeq (@SHARED@,no)
CONFIGOPTIONS += --disable-shared
endif

ifeq (@DEBUG@,yes)
CONFIGOPTIONS += --enable-gc-debug

# --enable-gc-assertions causes all the tests to fail on 64 bit mac os x
#   because addresses of roots are added that are not a multiple of 8.
#   One such address is "start", the linker defined symbol, which can be a
#   non-multiple of 8 under gcc 4.6.2
CONFIGOPTIONS += --enable-gc-assertions

else
# INSTALLTARGET = install-strip
endif

CONFIGOPTIONS += --enable-large-config --disable-gcj-support --disable-java-finalization

include ../Makefile.library
Makefile: @srcdir@/Makefile.in ; cd ../.. && ./config.status libraries/gc/Makefile
INSTALLCMD   += && $(MAKE) -C libatomic_ops $(INSTALLOPTIONS) prefix=$(LIBRARIESDIR) $(INSTALLTARGET)
clean uninstall::
	if [ -d $(LIBRARIESDIR) ] ; \
	then cd $(LIBRARIESDIR) && \
		rm -rf lib/libgc.* lib/libcord.* include/gc share/gc lib/pkgconfig/bdw-gc.pc \
			include/gc.h include/gc_cpp.h ; \
	fi
post-install:; rm -f $(LIBRARIESDIR)/lib/libcord*
# Local Variables:
# compile-command: "make -C $M2BUILDDIR/libraries/gc "
# End:
