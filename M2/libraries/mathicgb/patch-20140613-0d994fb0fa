diff -ur /Users/mike/src/M2/M2/BUILD/mike/builds.tmp/opt64-clang-mathic/libraries/mathicgb/tmp/mathicgb-20140613-0d994fb0fa/configure.ac mathicgb-20140613-0d994fb0fa/configure.ac
--- /Users/mike/src/M2/M2/BUILD/mike/builds.tmp/opt64-clang-mathic/libraries/mathicgb/tmp/mathicgb-20140613-0d994fb0fa/configure.ac	2014-03-16 19:39:57.000000000 -0400
+++ mathicgb-20140613-0d994fb0fa/configure.ac	2014-09-10 20:41:52.000000000 -0400
@@ -12,13 +12,13 @@
 # Require C++11 support
 AX_CXX_COMPILE_STDCXX_11(, [mandatory])
 
+AM_PROG_AR
 
 dnl ----- The gtest dependency
 
 AC_ARG_WITH([gtest], AS_HELP_STRING(
     [--with-gtest], [use gtest, which is required for running the unit tests
-      with make check. The value download, which is the default, downloads
-      gtest if a gtest source directory cannot be found. Per the recommendation
+      with make check. Per the recommendation
       of the gtest documentation, gtest is compiled with the tests, so an
       installed gtest is not usable - you need the gtest source. GTEST_PATH
       indicates where to look for gtest and it is also where gtest
@@ -33,7 +33,8 @@
 AS_IF([test "x$with_gtest" == "x"], [with_gtest="download"])
 
 AS_IF([test "x$with_gtest" == "xdownload"],
-  [with_gtest="yes"; AC_CHECK_FILE([$GTEST_PATH/gtest/src/gtest-all.cc], [], [
+  [with_gtest="yes"; AC_CHECK_FILE([$GTEST_PATH/src/gtest-all.cc], [], [
+    echo "downloading of gtest disabled" >&2; exit 1
     mkdir -p "$GTEST_PATH";
     (
       cd $GTEST_PATH;
@@ -44,7 +45,7 @@
       rm -rf gtest/
       mv gtest-$GTEST_VERSION/ gtest/
     );
-    if test ! -e "$GTEST_PATH/gtest/src/gtest-all.cc"; then
+    if test ! -e "$GTEST_PATH/src/gtest-all.cc"; then
       AC_MSG_WARN([Failed to download or extract gtest.]);
       with_gtest="no";
     else
@@ -52,7 +53,7 @@
     fi
   ])],
   [test "x$with_gtest" == "xyes"], [
-    AC_CHECK_FILE([$GTEST_PATH/gtest/src/gtest-all.cc], [], [
+    AC_CHECK_FILE([$GTEST_PATH/src/gtest-all.cc], [], [
       AC_MSG_ERROR([could not find gtest source at path $GTEST_PATH.])
     ])
   ],
@@ -60,7 +61,7 @@
   [AC_MSG_ERROR([invalid value $with_gtest for with_gtest.])]
 )
 AS_IF([test "x$with_gtest" == "xyes"],
-  [GTEST_CFLAGS="-I`cd $GTEST_PATH/gtest/include; echo $PWD` -I`cd $GTEST_PATH/gtest/; echo $PWD`"]);
+  [GTEST_CFLAGS="-I$GTEST_PATH/include -I$GTEST_PATH"]);
 AM_CONDITIONAL(with_gtest, test "x$with_gtest" == "xyes")
 
 dnl ----- The TBB dependency
diff -ur /Users/mike/src/M2/M2/BUILD/mike/builds.tmp/opt64-clang-mathic/libraries/mathicgb/tmp/mathicgb-20140613-0d994fb0fa/src/mathicgb/MathicIO.hpp mathicgb-20140613-0d994fb0fa/src/mathicgb/MathicIO.hpp
--- /Users/mike/src/M2/M2/BUILD/mike/builds.tmp/opt64-clang-mathic/libraries/mathicgb/tmp/mathicgb-20140613-0d994fb0fa/src/mathicgb/MathicIO.hpp	2014-03-16 19:39:57.000000000 -0400
+++ mathicgb-20140613-0d994fb0fa/src/mathicgb/MathicIO.hpp	2014-09-10 21:59:47.000000000 -0400
@@ -468,13 +468,14 @@
   bool writeSignEvenIfPositive,
   std::ostream& out
 ) {
+  Coefficient coef1 = coef;
   if (ring.field().isNegative(coef)) {
     out << "-";
-    coef = ring.field().negativeNonZero(coef);
+    coef1 = ring.field().negativeNonZero(coef);
   } else if (writeSignEvenIfPositive)
     out << '+';
-  if (!ring.field().isOne(coef)) {
-    out << unchar(coef.value());
+  if (!ring.field().isOne(coef1)) {
+    out << unchar(coef1.value());
     if (ring.monoid().isIdentity(mono)) {
       if (writeComponent)
         this->writeComponent(ring.monoid(), mono, out);
diff -ur /Users/mike/src/M2/M2/BUILD/mike/builds.tmp/opt64-clang-mathic/libraries/mathicgb/tmp/mathicgb-20140613-0d994fb0fa/src/mathicgb/SPairs.hpp mathicgb-20140613-0d994fb0fa/src/mathicgb/SPairs.hpp
--- /Users/mike/src/M2/M2/BUILD/mike/builds.tmp/opt64-clang-mathic/libraries/mathicgb/tmp/mathicgb-20140613-0d994fb0fa/src/mathicgb/SPairs.hpp	2014-03-16 19:39:57.000000000 -0400
+++ mathicgb-20140613-0d994fb0fa/src/mathicgb/SPairs.hpp	2014-09-10 21:35:06.000000000 -0400
@@ -249,9 +249,9 @@
     mAdvancedBuchbergerLcmCriterionGraph;
 
   friend void mathic::PairQueueNamespace::constructPairData<QueueConfiguration>
-    (void*, Index, Index, QueueConfiguration&);
+  (void*, mathic::PairQueueNamespace::Index, mathic::PairQueueNamespace::Index, QueueConfiguration&);
   friend void mathic::PairQueueNamespace::destructPairData<QueueConfiguration>
-    (OrderMonoid::Mono*, Index, Index, QueueConfiguration&);
+  (OrderMonoid::Mono*, mathic::PairQueueNamespace::Index, mathic::PairQueueNamespace::Index, QueueConfiguration&);
 };
 
 MATHICGB_NAMESPACE_END
diff -ur /Users/mike/src/M2/M2/BUILD/mike/builds.tmp/opt64-clang-mathic/libraries/mathicgb/tmp/mathicgb-20140613-0d994fb0fa/src/test/gtestInclude.cpp mathicgb-20140613-0d994fb0fa/src/test/gtestInclude.cpp
--- /Users/mike/src/M2/M2/BUILD/mike/builds.tmp/opt64-clang-mathic/libraries/mathicgb/tmp/mathicgb-20140613-0d994fb0fa/src/test/gtestInclude.cpp	2014-03-16 19:39:57.000000000 -0400
+++ mathicgb-20140613-0d994fb0fa/src/test/gtestInclude.cpp	2014-09-10 20:41:52.000000000 -0400
@@ -12,6 +12,4 @@
 namespace mgb {}
 using namespace mgb;
 
-// the .. goes back from the include/ directory of gtest so we can
-// enter the src directory.
-#include <../src/gtest-all.cc>
+#include "src/gtest-all.cc"
